name: Run GoReleaser
description: Sets up the proper Go version, Docker Buildx, QEMU, and runs GoReleaser

inputs:
  snapshot:
    description: Whether to create a snapshot release or real one
    default: "true"
  bugsnag_api_key:
    description: The Bugsnag API key
    default: "NOT_SET"
  repository_url:
    description: The repository URL that GoReleaser will use to create the Docker images
    required: true
  github_token:
    description: The GitHub token
    required: false
  disable_github_release:
    description: Whether to disable publishing the GitHub release
    default: "true"

runs:
    using: composite
    steps:      
      - name: Setup Go
        uses: actions/setup-go@v5
        with: { go-version-file: go.mod }

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "linux/amd64,linux/arm64"

      - name: Fake tag for Goreleaser
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        shell: bash
        run: |
          # GoReleaser requires a tag to be present, so we
          # create a fake one.
          git config --global user.email "ci@spacelift.io"
          git config --global user.name "Spacelift CI"
          git tag -a v0.0.0 -m "Fake tag for Goreleaser"

      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --snapshot=${{ inputs.snapshot }}
        env:
          BUGSNAG_API_KEY: ${{ inputs.bugsnag_api_key }}
          REPOSITORY_URL: ${{ inputs.repository_url }}
          GITHUB_TOKEN: ${{ inputs.github_token }}
          DISABLE_GITHUB_RELEASE: ${{ inputs.disable_github_release }}

outputs:
  metadata:
    description: The release metadata of GoReleaser
    value: ${{ steps.goreleaser.outputs.metadata }}
